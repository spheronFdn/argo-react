version: 2.1

orbs:
  aws-s3: circleci/aws-s3@3.0

jobs:
  formatting:
    working_directory: ~/argo-react
    docker:
      - image: circleci/node:14
    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - dependencies-cache-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: Install Dependencies
          command: |
            sudo npm i -g codecov node-gyp
            yarn install

      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - ./node_modules
            - ~/.npm
            - ~/.cache

      - run:
          name: Check Formatting & Codecov
          command: yarn run prettier:check && codecov

  build-deploy-dev:
    resource_class: large
    working_directory: ~/argo-react
    docker:
      - image: circleci/node:14
    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - dependencies-cache-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: Install Dependencies
          command: |
            sudo npm i -g codecov node-gyp
            yarn install

      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - ./node_modules
            - ~/.npm
            - ~/.cache

      - run:
          name: Run Build
          command: CI=false yarn run build:dev

      - aws-s3/sync:
          aws-region: AWS_REGION
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          from: build
          to: "s3://dev.spheron.network"
          arguments: |
            --acl public-read \
            --cache-control "max-age=86400"

  build-deploy-prod:
    resource_class: large
    working_directory: ~/argo-react
    docker:
      - image: circleci/node:14
    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - dependencies-cache-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: Install Dependencies
          command: |
            sudo npm i -g codecov node-gyp
            yarn install

      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - ./node_modules
            - ~/.npm
            - ~/.cache

      - run:
          name: Run Build
          command: CI=false yarn run build:prod

      - aws-s3/sync:
          aws-region: AWS_REGION
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          from: build
          to: "s3://app.spheron.network"
          arguments: |
            --acl public-read \
            --cache-control "max-age=86400"

workflows:
  react-deploy:
    jobs:
      - formatting
      - build-deploy-dev:
          requires:
            - formatting # Only run deploy job once the build job has completed
          filters:
            branches:
              only: dev
      - build-deploy-prod:
          requires:
            - formatting # Only run deploy job once the build job has completed
          filters:
            branches:
              only: master
